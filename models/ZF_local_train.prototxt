name: "FA_ZF_local"

#------------------------------- input ----------------------------
layer {
	name: "data"
	type: "HDF5Data"
	top: "patch"
	top: "move"
	hdf5_data_param {
	source: "models/list_train_local.txt"
	batch_size: 24
	}
}

layer {
	name: "scale_and_shift"
	bottom: "patch"
	top: "scale_and_shift"
	type: "Scale"
	param{
		lr_mult: 0
		decay_mult: 0
		}
	param{
		lr_mult: 0
		decay_mult: 0
	}
	scale_param{
		filler{
			type: "constant"
			value: 1
		}
		bias_term: true
		bias_filler {
			type: "constant"
			value: -128
		}
	}
}

layer {
	name: "flatdata"
	type: "Flatten"
	bottom: "move"
	top: "flatdata"
}


#------------------------------- split ----------------------------
layer {
	name: "slicer"
	type: "Slice"
	bottom: "scale_and_shift"
	top: "patch_slice_1"
	top: "patch_slice_2"
	top: "patch_slice_3"
	top: "patch_slice_4"
	top: "patch_slice_5"
	top: "patch_slice_6"
	top: "patch_slice_7"
	top: "patch_slice_8"
	top: "patch_slice_9"
	top: "patch_slice_10"
	top: "patch_slice_11"
	top: "patch_slice_12"
	top: "patch_slice_13"
	top: "patch_slice_14"
	top: "patch_slice_15"
	top: "patch_slice_16"
	top: "patch_slice_17"
	top: "patch_slice_18"
	top: "patch_slice_19"
	top: "patch_slice_20"
	top: "patch_slice_21"
	top: "patch_slice_22"
	top: "patch_slice_23"
	top: "patch_slice_24"
	top: "patch_slice_25"
	top: "patch_slice_26"
	top: "patch_slice_27"
	top: "patch_slice_28"
	top: "patch_slice_29"
	top: "patch_slice_30"
	top: "patch_slice_31"
	top: "patch_slice_32"
	top: "patch_slice_33"
	top: "patch_slice_34"
	top: "patch_slice_35"
	top: "patch_slice_36"
	top: "patch_slice_37"
	top: "patch_slice_38"
	top: "patch_slice_39"
	top: "patch_slice_40"
	top: "patch_slice_41"
	top: "patch_slice_42"
	top: "patch_slice_43"
	top: "patch_slice_44"
	top: "patch_slice_45"
	top: "patch_slice_46"
	top: "patch_slice_47"
	top: "patch_slice_48"
	top: "patch_slice_49"
	top: "patch_slice_50"
	top: "patch_slice_51"
	top: "patch_slice_52"
	top: "patch_slice_53"
	top: "patch_slice_54"
	top: "patch_slice_55"
	top: "patch_slice_56"
	top: "patch_slice_57"
	top: "patch_slice_58"
	top: "patch_slice_59"
	top: "patch_slice_60"
	top: "patch_slice_61"
	top: "patch_slice_62"
	top: "patch_slice_63"
	top: "patch_slice_64"
	top: "patch_slice_65"
	top: "patch_slice_66"
	top: "patch_slice_67"
	top: "patch_slice_68"
	slice_param {
		axis:1
		slice_point: 3
		slice_point: 6
		slice_point: 9
		slice_point: 12
		slice_point: 15
		slice_point: 18
		slice_point: 21
		slice_point: 24
		slice_point: 27
		slice_point: 30
		slice_point: 33
		slice_point: 36
		slice_point: 39
		slice_point: 42
		slice_point: 45
		slice_point: 48
		slice_point: 51
		slice_point: 54
		slice_point: 57
		slice_point: 60
		slice_point: 63
		slice_point: 66
		slice_point: 69
		slice_point: 72
		slice_point: 75
		slice_point: 78
		slice_point: 81
		slice_point: 84
		slice_point: 87
		slice_point: 90
		slice_point: 93
		slice_point: 96
		slice_point: 99
		slice_point: 102
		slice_point: 105
		slice_point: 108
		slice_point: 111
		slice_point: 114
		slice_point: 117
		slice_point: 120
		slice_point: 123
		slice_point: 126
		slice_point: 129
		slice_point: 132
		slice_point: 135
		slice_point: 138
		slice_point: 141
		slice_point: 144
		slice_point: 147
		slice_point: 150
		slice_point: 153
		slice_point: 156
		slice_point: 159
		slice_point: 162
		slice_point: 165
		slice_point: 168
		slice_point: 171
		slice_point: 174
		slice_point: 177
		slice_point: 180
		slice_point: 183
		slice_point: 186
		slice_point: 189
		slice_point: 192
		slice_point: 195
		slice_point: 198
		slice_point: 201
	}
}

# ----------------------- ZF -------------------
layer {
	name: "conv1"
	type: "Convolution"
	bottom: "scale_and_shift"
	top: "conv1"
	param {
#learning rate
		lr_mult: 1.0
	}
	param {
		lr_mult: 2.0
	}
	convolution_param {
		num_output: 96
		kernel_size: 7
		pad: 3
		stride: 2
		weight_filler {
			type: "gaussian"
			std: 0.001
		}
		bias_filler {
			type: "constant"
			value: 0
		}
	}
}

layer {
	name: "relu1"
	type: "ReLU"
	bottom: "conv1"
	top: "conv1"
}

layer {
	name: "norm1"
	type: "LRN"
	bottom: "conv1"
	top: "norm1"
	lrn_param {
		local_size: 3
		alpha: 0.00005
		beta: 0.75
		norm_region: WITHIN_CHANNEL
	}
}

layer {
	name: "pool1"
	type: "Pooling"
	bottom: "norm1"
	top: "pool1"
	pooling_param {
		kernel_size: 3
		stride: 2
		pad: 1
		pool: MAX
	}
}

layer {
	name: "conv2"
	type: "Convolution"
	bottom: "pool1"
	top: "conv2"
	param {
		lr_mult: 1.0
	}
	param {
		lr_mult: 2.0
	}
	convolution_param {
		num_output: 256
		kernel_size: 5
		pad: 2
		stride: 2
		weight_filler {
			type: "gaussian"
			std: 0.001
		}
		bias_filler {
			type: "constant"
			value: 1
		}
	}
}

layer {
	name: "relu2"
	type: "ReLU"
	bottom: "conv2"
	top: "conv2"
}

layer {
	name: "norm2"
	type: "LRN"
	bottom: "conv2"
	top: "norm2"
	lrn_param {
		local_size: 3
		alpha: 0.00005
		beta: 0.75
		norm_region: WITHIN_CHANNEL
	}
}

layer {
	name: "pool2"
	type: "Pooling"
	bottom: "norm2"
	top: "pool2"
	pooling_param {
		kernel_size: 3
		stride: 2
		pad: 1
		pool: MAX
	}
}

layer {
	name: "conv3"
	type: "Convolution"
	bottom: "pool2"
	top: "conv3"
	param {
		lr_mult: 1.0
	}
	param {
		lr_mult: 2.0
	}
	convolution_param {
		num_output: 384
		kernel_size: 3
		pad: 1
		stride: 1
		weight_filler {
			type: "gaussian"
			std: 0.001
		}
		bias_filler {
			type: "constant"
			value: 0
		}
	}
}

layer {
	name: "relu3"
	type: "ReLU"
	bottom: "conv3"
	top: "conv3"
}

layer {
	name: "conv4"
	type: "Convolution"
	bottom: "conv3"
	top: "conv4"
	param {
		lr_mult: 1.0
	}
	param {
		lr_mult: 2.0
	}
	convolution_param {
		num_output: 384
		kernel_size: 3
		pad: 1
		stride: 1
		weight_filler {
			type: "gaussian"
			std: 0.001
		}
		bias_filler {
			type: "constant"
			value: 1
		}
	}
}

layer {
	name: "relu4"
	type: "ReLU"
	bottom: "conv4"
	top: "conv4"
}

layer {
	name: "conv5"
	type: "Convolution"
	bottom: "conv4"
	top: "conv5"
	param {
		lr_mult: 1.0
	}
	param {
		lr_mult: 2.0
	}
	convolution_param {
		num_output: 256
		kernel_size: 3
		pad: 1
		stride: 1
		weight_filler {
			type: "gaussian"
			std: 0.001
		}
		bias_filler {
			type: "constant"
			value: 1
		}
	}
}

layer {
	name: "relu5"
	type: "ReLU"
	bottom: "conv5"
	top: "conv5"
}

#-----------------------layer +-------------------------

layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "conv5"
  top: "ip1"
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}


layer {
  name: "fc136"
  type: "InnerProduct"
  bottom: "ip2"
  top: "fc136"
  inner_product_param {
    num_output: 136
    weight_filler {
      type: "xavier"
    }
  }
}

#------------------------------- loss ----------------------------

layer {
  name: "out"
  type: "EuclideanLoss"
  bottom: "fc136"
  bottom: "flatdata"
  top: "out"
  loss_weight: 1
}
